[{"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/index.js":"1","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/reportWebVitals.js":"2","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/redux/reducers/index.js":"3","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/App.js":"4","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/Header.jsx":"5","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/HomePage.jsx":"6","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/SettingsDialog.jsx":"7","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/WebsiteInfoContainer.jsx":"8","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/assets/DefaultWebsites.js":"9","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/WebsiteInfo.jsx":"10","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/AddWebsite.jsx":"11","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/redux/actions/NewsActions.js":"12","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/redux/reducers/NewsReducer.js":"13","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/NewsListContainer.jsx":"14","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/NewsCard.jsx":"15"},{"size":767,"mtime":1610824284429,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610628197989,"results":"18","hashOfConfig":"17"},{"size":177,"mtime":1610824847105,"results":"19","hashOfConfig":"17"},{"size":801,"mtime":1610825951678,"results":"20","hashOfConfig":"17"},{"size":1218,"mtime":1610789073994,"results":"21","hashOfConfig":"17"},{"size":2853,"mtime":1610819888397,"results":"22","hashOfConfig":"17"},{"size":2271,"mtime":1610825951698,"results":"23","hashOfConfig":"17"},{"size":1006,"mtime":1610791904367,"results":"24","hashOfConfig":"17"},{"size":155,"mtime":1610824253720,"results":"25","hashOfConfig":"17"},{"size":2617,"mtime":1610788446277,"results":"26","hashOfConfig":"17"},{"size":1160,"mtime":1610801119897,"results":"27","hashOfConfig":"17"},{"size":429,"mtime":1610818829716,"results":"28","hashOfConfig":"17"},{"size":1788,"mtime":1610827695510,"results":"29","hashOfConfig":"17"},{"size":1797,"mtime":1610827751830,"results":"30","hashOfConfig":"17"},{"size":2127,"mtime":1610827224255,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"d4n8tr",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/index.js",[],["70","71"],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/reportWebVitals.js",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/redux/reducers/index.js",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/App.js",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/Header.jsx",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/HomePage.jsx",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/SettingsDialog.jsx",["72"],"import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport { Dialog,\n  DialogContent,\n  DialogActions,\n  DialogTitle,\n  Typography,\n  Tooltip,\n  Button,\n  Grid,\n  Fab,\n} from \"@material-ui/core\";\nimport { AddRounded } from \"@material-ui/icons\";\nimport {WebsiteInfoContainer} from \"./WebsiteInfoContainer\";\nimport {AddWebsite} from \"./AddWebsite\";\n\nexport const SettingsDialog = (props) => {\n  const { open, handleClose, websiteList, handleChangeWebSiteList, handleSubmitWebsiteData } = props;\n  const [ openAddSite, setOpenAddSite ] = useState(null);\n\n  const handleAddNewWebsite = (name, url) => {\n    handleChangeWebSiteList(name, 'name', name);\n    setTimeout(() => handleChangeWebSiteList(name, 'url', url), 1);\n    setOpenAddSite(null);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>\n        <Typography>\n          انتخاب سایت‌های خبری\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <WebsiteInfoContainer\n          websiteList={websiteList}\n          handleChangeWebSiteList={handleChangeWebSiteList}\n        />\n        <Grid container>\n          <Tooltip title={'اضافه‌کردن وب‌سایت'}>\n            <Fab\n              onClick={(event) => setOpenAddSite(event.currentTarget)}\n              color={'primary'}\n            >\n              <AddRounded />\n            </Fab>\n          </Tooltip>\n        </Grid>\n        <AddWebsite\n          open={openAddSite}\n          handleClose={() => setOpenAddSite(null)}\n          handleAddNewWebsite={handleAddNewWebsite}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleClose}\n          color={'primary'}\n        >\n          انصراف\n        </Button>\n        <Button\n          onClick={() => {\n            handleSubmitWebsiteData();\n            handleClose();\n          }}\n          color={'primary'}\n          variant={'contained'}\n        >\n          ثبت\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  websiteList: PropTypes.shape({}),\n  handleChangeWebSiteList: PropTypes.func,\n  handleSubmitWebsiteData: PropTypes.func,\n};","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/WebsiteInfoContainer.jsx",["73"],"import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {WebsiteInfo} from \"./WebsiteInfo\";\n\nexport const WebsiteInfoContainer = (props) => {\n  const { websiteList, handleChangeWebSiteList } = props;\n  return (\n    <div>\n      {\n        Object.keys(websiteList).map( id => {\n          return (\n            <WebsiteInfo\n              key={id}\n              data={websiteList[id]}\n              handleChangeStartDate={(date) => handleChangeWebSiteList(id, 'selectedStartDate', date)}\n              handleChangeEndDate={(date) => handleChangeWebSiteList(id, 'selectedEndDate', date)}\n              handleChangeNewsCount={(event) => handleChangeWebSiteList(id, 'newsCount', event.target.value)}\n              handleToggleCheck={(event) => handleChangeWebSiteList(id, 'checked', event.target.checked)}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nWebsiteInfoContainer.propTypes = {\n  websiteList: PropTypes.shape({}),\n  handleChangeWebSiteList: PropTypes.func,\n}","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/assets/DefaultWebsites.js",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/WebsiteInfo.jsx",["74","75"],"import React from \"react\";\nimport PropTypes from 'prop-types';\nimport jMoment from 'moment-jalaali';\nimport JalaaliUtils from '@date-io/jalaali';\nimport { Avatar, Checkbox, Tooltip, TextField, Grid } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\n\njMoment.loadPersian({ dialect: 'persian-modern', usePersianDigits: true });\n\nexport const WebsiteInfo = (props) => {\n  const {\n    handleToggleCheck,\n    handleChangeNewsCount,\n    handleChangeStartDate,\n    handleChangeEndDate,\n  } = props;\n  const { name,\n    url,\n    avatar,\n    checked,\n    newsCount,\n    selectedStartDate,\n    selectedEndDate,\n  } = props.data;\n\n  return (\n    <Grid container>\n      <Checkbox\n        checked={checked}\n        onChange={handleToggleCheck}\n      />\n      <Tooltip title={url}>\n        <Avatar alt={'name'} src={avatar} />\n      </Tooltip>\n      <TextField\n        disabled={!checked}\n        label={'نام سایت'}\n        InputProps={{\n          readOnly: true,\n        }}\n        variant={'outlined'}\n        value={name}\n      />\n      <TextField\n        id={'news-count'}\n        disabled={!checked}\n        label={'تعداد خبر'}\n        type={'number'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        value={newsCount}\n        onChange={handleChangeNewsCount}\n        variant={'outlined'}\n      />\n      <MuiPickersUtilsProvider utils={JalaaliUtils} locale={'fa'}>\n        <KeyboardDatePicker\n          id={'start-date'}\n          autoOk\n          label={'از تاریخ'}\n          okLabel={''}\n          disabled={!checked}\n          labelFunc={date => (date ? date.format('jYYYY/jMM/jDD') : '')}\n          format={'jYYYY/jMM/jDD'}\n          value={selectedStartDate}\n          onChange={handleChangeStartDate}\n          inputVariant={'outlined'}\n        />\n      </MuiPickersUtilsProvider>\n      <MuiPickersUtilsProvider utils={JalaaliUtils} locale={'fa'}>\n        <KeyboardDatePicker\n          id={'end-date'}\n          autoOk\n          label={'تا تاریخ'}\n          okLabel={''}\n          disabled={!checked}\n          labelFunc={date => (date ? date.format('jYYYY/jMM/jDD') : '')}\n          format={'jYYYY/jMM/jDD'}\n          value={selectedEndDate}\n          onChange={handleChangeEndDate}\n          inputVariant={'outlined'}\n        />\n      </MuiPickersUtilsProvider>\n    </Grid>\n  );\n}\n\nWebsiteInfo.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  handleChangeStartDate: PropTypes.func,\n  handleChangeEndDate: PropTypes.func,\n  handleChangeNewsCount: PropTypes.func,\n  handleToggleCheck: PropTypes.func,\n}",["76","77"],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/AddWebsite.jsx",["78","79"],"import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport {Button, TextField, Popover} from \"@material-ui/core\";\n\nexport const AddWebsite = (props) => {\n  const [name, setName] = useState('');\n  const [url, setUrl] = useState('');\n  const {open, handleClose, handleAddNewWebsite} = props;\n\n  const handleSubmit = () => {\n    if (name !== '' && url !== '') {\n      handleAddNewWebsite(name, url);\n      setName('');\n      setUrl('');\n    }\n  };\n\n  return (\n    <Popover\n      open={Boolean(open)}\n      anchorEl={open}\n      onClose={handleClose}\n    >\n      <TextField\n        label={'نام سایت'}\n        value={name}\n        onChange={e => setName(e.target.value)}\n        variant={'outlined'}\n        margin={'dense'}\n      />\n      <TextField\n        label={'آدرس'}\n        value={url}\n        onChange={e => setUrl(e.target.value)}\n        variant={'outlined'}\n        margin={'dense'}\n      />\n      <Button\n        onClick={handleSubmit}\n      >\n        ثبت\n      </Button>\n    </Popover>\n  );\n}\n\nAddWebsite.propTypes = {\n  handleAddNewWebsite: PropTypes.func,\n  handleClose: PropTypes.func,\n  open: PropTypes.any,\n};","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/redux/actions/NewsActions.js",["80"],"import axios from \"axios\";\nexport const getNews = (filteredData) => dispatch => {\n  const actionData = {};\n  dispatch({\n    type: 'GET_NEWS_REQUESTED',\n    //...TODO fill this action\n  })\n  let url = `http://127.0.0.1:8000/api/crawler/result/`;\n  return axios.post(url, filteredData)\n    .then((response) => {\n      dispatch({\n        type: 'GET_NEWS_RECEIVED',\n        //...TODO fill this action\n      })\n    })\n    .catch((error) => {\n      dispatch({\n        type: 'GET_NEWS_FAILURE',\n        //...TODO fill this action\n      })\n    });\n}","/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/redux/reducers/NewsReducer.js",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/NewsListContainer.jsx",[],"/home/amir/Trem 7/Internet Engineering/Projects/pahse 2/news_crawler/frontend/src/components/NewsCard.jsx",["81"],"import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport { Card,\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n  Typography,\n  Collapse,\n  Avatar,\n} from \"@material-ui/core\";\nimport { OpenInNewRounded, ExpandMoreRounded } from \"@material-ui/icons\";\n\nexport const NewsCard = (props) => {\n  const [expanded, setExpanded] = useState(false);\n  const { avatar, name, url, title, summary, link, date } = props;\n\n  const getDateFormat = () => {\n    let d = '', m = '', y = '';\n    // d = new Intl.DateTimeFormat('fa', { day: 'numeric'}).format(date.toDate());\n    // m = new Intl.DateTimeFormat('fa', { month: 'long'}).format(date.toDate());\n    // y = new Intl.DateTimeFormat('fa', { day: 'numeric'}).format(date.toDate());\n    return `${y} ${m} ${d}`;\n  };\n\n  const getSummary = () => {\n    return summary;\n  };\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar alt={name} src={avatar} />\n        }\n        title={name}\n        subheader={getDateFormat()}\n      />\n      <CardMedia\n        image={''}\n        onClick={() => window.open(link, '_blank')}\n        title={link}\n      />\n      <CardContent>\n        <Typography variant={'body2'} color={'textSecondary'} component={'p'}>\n          {title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          onClick={() => window.open(url, '_blank')}\n        >\n          <OpenInNewRounded />\n        </IconButton>\n        <IconButton\n          onClick={() => setExpanded(!expanded)}\n          aria-expanded={expanded}\n        >\n          <ExpandMoreRounded />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout={\"auto\"} unmountOnExit addEndListener={() => {}}>\n        <CardContent>\n          <Typography>\n            {getSummary()}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nNewsCard.propTypes = {\n  avatar: PropTypes.func,\n  name: PropTypes.func,\n  url: PropTypes.string,\n  title: PropTypes.string,\n  summary: PropTypes.string,\n  link: PropTypes.string,\n  date: PropTypes.string,\n};",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":3,"nodeType":"88","messageId":"89","endLine":4,"endColumn":20},{"ruleId":"86","severity":1,"message":"90","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"86","severity":1,"message":"91","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":24},{"ruleId":"86","severity":1,"message":"92","line":6,"column":55,"nodeType":"88","messageId":"89","endLine":6,"endColumn":65},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"86","severity":1,"message":"95","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":17},{"ruleId":"86","severity":1,"message":"96","line":3,"column":19,"nodeType":"88","messageId":"89","endLine":3,"endColumn":23},{"ruleId":"86","severity":1,"message":"97","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":19},{"ruleId":"86","severity":1,"message":"98","line":17,"column":52,"nodeType":"88","messageId":"89","endLine":17,"endColumn":56},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'DialogContentText' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'useState' is defined but never used.","'DatePicker' is defined but never used.",["99"],["100"],"'MenuItem' is defined but never used.","'Menu' is defined but never used.","'actionData' is assigned a value but never used.","'date' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]